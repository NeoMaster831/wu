idxmap1 = [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 698, 699, 700, 701, 6, 7, None, None, None, None, None, 5, 14, None, None, 1, 2, 3, 4, 13, 22, 23, 8, 9, 10, 11, 12, 21, 30, 31, 16, 17, 18, 19, 20, 29, 38, 39, 24, 25, 26, 27, 28, 37, 46, 47, 32, 33, 34, 35, 36, 45, 54, 55, 40, 41, 42, 43, 44, 53, 62, 63, 48, 49, 50, 51, 52, 61, 70, 71, 56, 57, 58, 59, 60, 69, 78, 79, 64, 65, 66, 67, 68, 77, 86, 87, 72, 73, 74, 75, 76, 85, 94, 95, 80, 81, 82, 83, 84, 93, 102, 103, 88, 89, 90, 91, 92, 101, 110, 111, 96, 97, 98, 99, 100, 109, 118, 119, 104, 105, 106, 107, 108, 117, 126, 127, 112, 113, 114, 115, 116, 125, 134, 135, 120, 121, 122, 123, 124, 133, 142, 143, 128, 129, 130, 131, 132, 141, 150, 151, 136, 137, 138, 139, 140, 149, 158, 159, 144, 145, 146, 147, 148, 157, 166, 167, 152, 153, 154, 155, 156, 165, 174, 175, 160, 161, 162, 163, 164, 173, 182, 183, 168, 169, 170, 171, 172, 181, 190, 191, 176, 177, 178, 179, 180, 189, 198, 199, 184, 185, 186, 187, 188, 197, 206, 207, 192, 193, 194, 195, 196, None, 214, 215, 200, 201, 202, 203, 204, 213, 222, 223, 208, 209, 210, 211, 212, 221, 230, 231, 216, 217, 218, 219, 220, 229, 236, 237, 224, 225, 226, 227, 228, 235, 232, None, None]
idxmap2 = [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 698, None, 700, None, 6, 7, None, None, None, None, None, None, None, 15, 0, None, 2, 3, 4, 13, 22, 23, 8, 9, 10, 11, 12, 21, 30, 31, 16, 17, 18, 19, 20, 29, 38, 39, 24, 25, 26, 27, 28, 37, 46, 47, 32, 33, 34, 35, 36, 45, 54, 55, 40, 41, 42, 43, 44, None, 62, 63, 48, 49, None, 51, None, 61, 70, 71, 56, 57, 58, 59, 60, 69, None, 79, 64, 65, 66, 67, 68, 77, 86, 87, 72, 73, 74, 75, 76, 85, None, 95, 80, 81, 82, 83, 84, 93, 102, 103, 88, 89, 90, 91, 92, 101, None, 111, 96, 97, 98, 99, 100, 109, 118, 119, 104, 105, 106, 107, 108, 117, 126, 127, 112, 113, 114, 115, 116, 125, 134, 135, 120, None, 122, None, 124, 133, 142, 143, 128, 129, 130, 131, 132, 141, 150, 151, 136, 137, 138, 139, 140, 149, 158, None, 144, 145, 146, 147, 148, 157, 166, 167, None, 153, 154, 155, 156, None, 174, None, 160, 161, 162, 163, 164, 173, 182, 183, 168, 169, 170, 171, 172, 181, 190, 191, 176, None, None, 179, 180, 189, 198, None, 184, 185, 186, 187, 188, None, None, 207, 192, 193, 194, 195, 196, 205, None, 215, None, None, None, 203, 204, 213, 222, 223, 208, 209, None, 211, None, 221, 230, None, 216, 217, 218, 219, None, 229, 236, None, 224, 225, 226, 227, None, 235, None, 233, None]

idxmap = []
for a, b in zip(idxmap1, idxmap2):
    if a is not None and b is not None:
        assert a == b
        idxmap.append(a)
    elif a is not None:
        idxmap.append(a)
    elif b is not None:
        idxmap.append(b)
    else:
        idxmap.append(None)

print(idxmap)