import struct
from cryptography.hazmat.primitives.ciphers import Cipher, algorithms
from cryptography.hazmat.backends import default_backend

def chacha20_decrypt(key: bytes, nonce12: bytes, data: bytes, counter: int = 0) -> bytes:
    if len(key) != 32:
        raise ValueError(f"Key 길이 오류: {len(key)} (필요: 32)")
    if len(nonce12) != 12:
        raise ValueError(f"Nonce 길이 오류: {len(nonce12)} (필요: 12)")
    if not (0 <= counter <= 0xFFFFFFFF):
        raise ValueError("counter는 0~2^32-1 범위")

    # cryptography의 ChaCha20은 16바이트 nonce(LE 4바이트 counter + 12바이트 nonce)를 요구
    nonce16 = struct.pack("<I", counter) + nonce12

    cipher = Cipher(algorithms.ChaCha20(key, nonce16), mode=None, backend=default_backend())
    decryptor = cipher.decryptor()
    return decryptor.update(data) + decryptor.finalize()


import base64

bin_data = base64.b64decode("")
key = b"\xfe2\x01\x00O\xa0Z:\xc4d\x17L\xf9\xe3!\xaf\x8e\x04\xfdNN?<\\'#\xb7\xbedJo\x04"
nonce = b"\\" * 12
sex = chacha20_decrypt(key, nonce, bin_data)

with open("flag.png", "wb") as f:
    f.write(sex)